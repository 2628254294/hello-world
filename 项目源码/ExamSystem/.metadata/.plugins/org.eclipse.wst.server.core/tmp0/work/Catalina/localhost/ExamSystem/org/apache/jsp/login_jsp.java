/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.55
 * Generated at: 2020-06-17 10:08:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(basePath);
      out.write("css/admin.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(basePath);
      out.write("css/pintuer.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(basePath);
      out.write("css/bootstrap.css\">\r\n");
      out.write("    <title>学生登录</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"bg\"></div>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"line bouncein\">\r\n");
      out.write("            <div class=\"xs6 xm4 xs3-move xm4-move\">\r\n");
      out.write("                <div style=\"height:80px;\"></div>\r\n");
      out.write("                <div class=\"media media-y margin-big-bottom\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <form action=\"");
      out.print(basePath);
      out.write("user?cmd=stulogin\" method=\"post\" class=\"login-form\">\r\n");
      out.write("                    <div class=\"panel loginbox\">\r\n");
      out.write("                        <div class=\"text-center margin-big padding-big-top\">\r\n");
      out.write("                            <h1>在线考试系统</h1>\r\n");
      out.write("                            <div class=\"form-top-left\">\r\n");
      out.write("                                <a data-type=\"student\" href=\"javascript:void(0);\" style=\"color: red;\">学生登录</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("                                &nbsp;&nbsp;&nbsp;\r\n");
      out.write("                                <a data-type=\"admin\" href=\"javascript:void(0);\">管理员登录</a><br>\r\n");
      out.write("                                <br>\r\n");
      out.write("                                <p id=\"mes\" style=\"color: red;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"panel-body\" style=\"padding:30px; padding-bottom:10px; padding-top:10px;\">\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <div class=\"field field-icon-right\">\r\n");
      out.write("                                    <input type=\"text\" class=\"input input-big\" name=\"username\" placeholder=\"登录账号\" data-validate=\"required:请填写账号\" />\r\n");
      out.write("                                    <span class=\"icon icon-user margin-small\"></span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <div class=\"field field-icon-right\">\r\n");
      out.write("                                    <input type=\"password\" class=\"input input-big\" name=\"userpwd\" placeholder=\"登录密码\" data-validate=\"required:请填写密码\" />\r\n");
      out.write("                                    <span class=\"icon icon-key margin-small\"></span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div style=\"padding:30px;\"><button type=\"submit\" class=\"button button-block bg-main text-big input-big\">登录</button></div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("js/jquery.js\"></script>    \r\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("js/bootstrap.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("js/pintuer.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("\t\tvar basePath = '");
      out.print(basePath);
      out.write("'\r\n");
      out.write("\t\t$('.form-top-left a').click(function () {\r\n");
      out.write("\t\t    $('.form-top-left').children().removeAttr(\"style\");\r\n");
      out.write("\t\t    var type = $(this).css('color', 'red').attr(\"data-type\");\r\n");
      out.write("\t\t    if (type == 'student') {\r\n");
      out.write("\t\t        $(document).attr(\"title\", \"学生登录\");\r\n");
      out.write("\t\t        $(\"#mes\").html('');\r\n");
      out.write("\t\t        $(\".login-form\").attr(\"action\", basePath + \"user?cmd=stulogin\");\r\n");
      out.write("\t\t    }else {\r\n");
      out.write("\t\t        $(document).attr(\"title\", \"管理员登录\");\r\n");
      out.write("\t\t        $(\"#register\").html('');\r\n");
      out.write("\t\t        $(\"#mes\").html('');\r\n");
      out.write("\t\t        $(\".login-form\").attr(\"action\", basePath + \"sys/user?cmd=login\");\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
